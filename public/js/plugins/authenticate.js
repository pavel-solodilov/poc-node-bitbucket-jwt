!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("atlassian-jwt")):"function"==typeof define&&define.amd?define(["atlassian-jwt"],t):((e=e||self).Bitbucket=e.Bitbucket||{},e.Bitbucket.Plugin=e.Bitbucket.Plugin||{},e.Bitbucket.Plugin.authenticate=t(e.atlassianJwt))}(this,(function(e){"use strict";function t(e,t){if(t){switch(t.type){case"apppassword":case"basic":if(!t.username||!t.password)throw new Error("Basic authentication requires both a username and password to be set");break;case"token":if(!t.token)throw new Error("Token authentication requires a token to be set");break;case"jwt":if(!t.appKey||!t.appClientKey||!t.appSharedSecret)throw new Error("JWT authentication requires an appKey, appClientKey, and appSharedSecret to be set");break;default:throw new Error("Invalid authentication type, must be 'apppassword', 'basic', 'token', or 'jwt'")}e.auth=t}else delete e.auth}function a(t,a){var r,n,i,o,s,u,c;if(t.auth)switch(t.auth.type){case"apppassword":case"basic":a.headers.authorization="Basic ".concat((c="".concat(t.auth.username,":").concat(t.auth.password),"undefined"!=typeof Buffer?Buffer.from(c).toString("base64"):btoa(c)));break;case"token":a.headers.authorization="Bearer ".concat(t.auth.token);break;case"jwt":a.headers.authorization="JWT ".concat((r=a.method,n=a.url,i=t.auth,o=Math.floor(Date.now()/1e3),s=e.fromMethodAndUrl(r,n),u={iss:i.appKey,sub:i.appClientKey,iat:o,exp:o+300,qsh:e.createQueryStringHash(s)},e.encodeSymmetric(u,i.appSharedSecret,e.SymmetricAlgorithm.HS256)))}}return function(e,r){if(!r.auth){var n={client:e,auth:void 0};e.authenticate=t.bind(null,n),e.requestHook.before(a.bind(null,n))}}}));
//# sourceMappingURL=authenticate.js.map
